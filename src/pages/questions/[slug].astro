---
import Main from "@/layouts/Main.astro";
import {
  findQuestion,
  getPublishedQuestions,
  getQuestionCategories,
  getQuestionAuthor,
} from "@/lib/questions";

export function getStaticPaths() {
  return getPublishedQuestions().map((question) => ({
    params: { slug: question.slug },
  }));
}

const { slug } = Astro.params;
const question = findQuestion(slug);

if (!question) {
  throw new Error(`Question not found for slug "${slug}".`);
}

const questionCategories = getQuestionCategories(question);
const author = getQuestionAuthor(question);

const markdownFiles = import.meta.glob("@/content/questions/*.md", { eager: true });
const page = Object.values(markdownFiles).find((module) =>
  module.file?.endsWith(question.markdown)
);
---

<Main title={`${question.title} - abolition.ing`}>
  <section class="question-header">
    <h1>{question.title}</h1>

    {questionCategories.length ? (
      <div class="category-meta">
        <a class="category-chip" href="/categories">Categories</a>
        <ul class="category-list">
          {questionCategories.map((category) => (
            <li>
              <a class="category-chip" href={`/categories/${category.id}`}>{category.name}</a>
            </li>
          ))}
        </ul>
      </div>
    ) : (
      <p class="category-placeholder">Uncategorized</p>
    )}
  </section>

  {page ? <page.Content /> : <p><em>Content not found.</em></p>}

  {author ? (
    <p class="author">
      - <a href={`/authors/${author.id}`}>{author.name}</a>
      {author.url ? (
        <>
          {" "}
          Â·{" "}
          <a class="external-link" href={author.url} target="_blank" rel="noopener noreferrer">
            Visit website
          </a>
        </>
      ) : null}
    </p>
  ) : null}
</Main>

<style>
  .question-header {
    margin-bottom: 1.5rem;
  }

  .question-header h1 {
    margin-bottom: 0.75rem;
  }

  .category-meta {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    gap: 0.75rem;
  }

  .category-list {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    padding: 0;
    margin: 0;
    list-style: none;
  }

  .category-list li {
    display: inline-flex;
  }

  .category-chip {
    display: inline-block;
    padding: 0.35rem 0.75rem;
    border-radius: 999px;
    background-color: rgba(255, 255, 255, 0.1);
    color: inherit;
    text-decoration: none;
    font-size: 0.9rem;
    border: 1px solid rgba(255, 255, 255, 0.2);
  }

  .category-chip:hover,
  .category-chip:focus-visible {
    background-color: rgba(255, 255, 255, 0.25);
  }

  .category-placeholder {
    margin: 0;
    color: rgba(255, 255, 255, 0.7);
  }

  .author {
    margin-top: 2rem;
  }

  .author .external-link {
    font-size: 0.85rem;
    opacity: 0.8;
  }
</style>
