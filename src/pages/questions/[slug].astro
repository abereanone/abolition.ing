---
import Main from "@/layouts/Main.astro";
import {
  findQuestion,
  getPublishedQuestions,
  getQuestionCategories,
  getQuestionAuthor,
} from "@/lib/questions";

export function getStaticPaths() {
  return getPublishedQuestions().map((question) => ({
    params: { slug: question.slug },
  }));
}

const { slug } = Astro.params;
const question = findQuestion(slug);

if (!question) {
  throw new Error(`Question not found for slug "${slug}".`);
}

const questionCategories = getQuestionCategories(question);
const author = getQuestionAuthor(question);

const markdownFiles = import.meta.glob("@/content/questions/*.md", { eager: true });
const page = Object.values(markdownFiles).find((module) =>
  module.file?.endsWith(question.markdown)
);
---

<Main title={`${question.title} - abolition.ing`}>
  <section class="question-header">
    <h1 class="page-title">{question.title}</h1>
  </section>

  <div class="question-body">
    {page ? <page.Content /> : <p><em>Content not found.</em></p>}
  </div>

  {author ? (
    <div class="author-card card-panel">
      <span>
        By <a href={`/authors/${author.id}`}>{author.name}</a>
      </span>
      {author.url ? (
        <a class="external-link" href={author.url} target="_blank" rel="noopener noreferrer">
          Visit website
        </a>
      ) : null}
    </div>
  ) : null}

  {questionCategories.length ? (
    <div class="category-meta category-footer">
      <a class="category-chip" href="/categories">Categories</a>
      <ul class="category-list">
        {questionCategories.map((category) => (
          <li>
            <a class="category-chip" href={`/categories/${category.id}`}>{category.name}</a>
          </li>
        ))}
      </ul>
    </div>
  ) : (
    <p class="category-placeholder category-footer">Uncategorized</p>
  )}
</Main>
